'use strict';var H=require('concaveman'),D=require('simplify-js'),y=require('fit-curve');function _interopDefault(e){return e&&e.__esModule?e:{default:e}}function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);if(e){Object.keys(e).forEach(function(k){if(k!=='default'){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:function(){return e[k]}});}})}n.default=e;return Object.freeze(n)}var H__default=/*#__PURE__*/_interopDefault(H);var D__default=/*#__PURE__*/_interopDefault(D);var y__namespace=/*#__PURE__*/_interopNamespace(y);function c(h,t=3){let e=10**t;return (Math.round(h*e)/e).toString()}var m=class h{static concavity=1;color;hullPoints;cubics;isValid;constructor(t,e,i,l){this.color=t;let o=e.map(r=>[r.x,r.y]);if(this.hullPoints=this.reducePoints(H__default.default(o,h.concavity,1).map(([r,u])=>({x:r,y:u})),i),this.isValid=this.hullPoints.length>=3,this.isValid){let r=({x:n,y:a})=>[n,a],u=([n,a])=>({x:n,y:a}),s=y__namespace.createTangent(r(this.hullPoints[1]),r(this.hullPoints[this.hullPoints.length-2]));this.cubics=y__namespace.fitCubic(this.hullPoints.map(n=>r(n)),s,s.map(n=>-n),l).map(([n,a,d,p])=>[u(n),u(a),u(d),u(p)]);}}reducePoints(t,e){return D__default.default(t,e,true)}getPathData(){if(!this.cubics)return "";let t=[],e=this.cubics[0];t.push(`M ${c(e[0].x)} ${c(e[0].y)}`);for(let i of this.cubics)t.push(`C ${c(i[1].x)} ${c(i[1].y)}, ${c(i[2].x)} ${c(i[2].y)}, ${c(i[3].x)} ${c(i[3].y)}`);return t.push("Z"),t.join(" ")}getPathElem(){return this.isValid?`<path fill="rgb(${this.color.r},${this.color.g},${this.color.b})" d="${this.getPathData()}" />
`:""}};var M=class{width;height;curveFittingTolerance;pathSimpMinDist;pixelGridStepSize;validHulls;minHullDistance;debugPointRadius;constructor(t,e,i){if(!t)throw new Error("imageData is required");if(!e?.length)throw new Error("palette must contain at least one color");let{pathSimplificationTolerance:l,curveFittingTolerance:o,minHullDistance:r=3,pixelGridStepSize:u=1,debugPointRadius:s}=i;this.width=t.width,this.height=t.height,this.curveFittingTolerance=o*(Math.max(this.width,this.height)/1e3),this.pathSimpMinDist=Math.max(0,l),this.pixelGridStepSize=Math.max(1,Math.round(u)),this.minHullDistance=r,this.debugPointRadius=s,this.validHulls=this.createHullsFromPalette(t,e);}getHullsByColor(t){return this.validHulls.find(e=>this.colorsMatch(e.color,t))}getSVGString(){let t=[`<svg width="${this.width}" height="${this.height}" `,`version="1.1" xmlns="http://www.w3.org/2000/svg">
`];for(let e of this.validHulls)if(t.push(e.getPathElem()),this.debugPointRadius!==void 0){for(let i of e.hullPoints)t.push(`<circle cx="${c(i.x)}" cy="${c(i.y)}" r="${this.debugPointRadius}" fill="none" stroke="#000" strokeWeight="${this.debugPointRadius/5}" />
`);if(e.cubics!==void 0)for(let i of e.cubics)t.push(`<circle cx="${c(i[0].x)}" cy="${c(i[0].y)}" r="${this.debugPointRadius}" fill="#000" stroke="none" />
<circle cx="${c(i[1].x)}" cy="${c(i[1].y)}" r="${this.debugPointRadius/2}" fill="#000" stroke="none" />
<circle cx="${c(i[2].x)}" cy="${c(i[2].y)}" r="${this.debugPointRadius/2}" fill="#000" stroke="none" />
`);}return t.push("</svg>"),t.join("")}createHullsFromPalette(t,e){return e.map(i=>this.createHullsForColor(t,i)).flat().filter(i=>i.isValid)}createHullsForColor(t,e){let i=this.createMaskPointCloud(t,e);return this.separatePointClouds(i).map(o=>new m(e,o,this.pathSimpMinDist,this.curveFittingTolerance))}separatePointClouds(t){let e=[];if(t.length===0)return e;let i=Math.max(0,this.minHullDistance);if(this.pixelGridStepSize>i)throw new Error("Pixel grid step needs to be smaller than the minimum hull distance.");let l=i*i,o=i,r=new Map;for(let s=0;s<t.length;s++){let n=t[s],a=Math.floor(n.x/o),d=Math.floor(n.y/o),p=`${a},${d}`;(r.get(p)??r.set(p,[]).get(p)).push(s);}let u=new Uint8Array(t.length);for(let s=0;s<t.length;s++){if(u[s])continue;let n=[],a=[],d=0;for(a.push(s),u[s]=1;d<a.length;){let p=a[d++],f=t[p];n.push(f);let $=Math.floor(f.x/o),v=Math.floor(f.y/o);for(let x=$-1;x<=$+1;x++)for(let b=v-1;b<=v+1;b++){let k=`${x},${b}`,C=r.get(k);if(C)for(let g of C){if(u[g])continue;let w=t[g],P=w.x-f.x,V=w.y-f.y;Math.abs(P)+Math.abs(V)>i*2||P*P+V*V<=l&&(u[g]=1,a.push(g));}}}n.length&&e.push(n);}return e}createMaskPointCloud(t,e){let{data:i,width:l,height:o}=t,r=[],u=this.pixelGridStepSize;for(let s=0;s<o;s+=u)for(let n=0;n<l;n+=u){let a=(s*l+n)*4;this.pixelMatches(i,a,e)&&r.push({x:n,y:s});}return r}pixelMatches(t,e,i){return t[e+3]!==0&&t[e]===i.r&&t[e+1]===i.g&&t[e+2]===i.b}colorsMatch(t,e){return t.r===e.r&&t.g===e.g&&t.b===e.b}};function S(h,t,e){return (t.x-h.x)*(e.y-h.y)-(t.y-h.y)*(e.x-h.x)}function F(h,t){return h.x===t.x&&h.y===t.y}function A(h){if(h.length<=1)return h.slice();let t=h.sort((o,r)=>o.x===r.x?o.y-r.y:o.x-r.x),e=[];for(let o of t)(!e.length||!F(e[e.length-1],o))&&e.push(o);if(e.length<=1)return e.slice();let i=[];for(let o of e){for(;i.length>=2&&S(i[i.length-2],i[i.length-1],o)<=0;)i.pop();i.push(o);}let l=[];for(let o=e.length-1;o>=0;o--){let r=e[o];for(;l.length>=2&&S(l[l.length-2],l[l.length-1],r)<=0;)l.pop();l.push(r);}return i.pop(),l.pop(),i.concat(l)}exports.Hull=m;exports.ImageTrace=M;exports.createConvexHullPoints=A;//# sourceMappingURL=index.cjs.map
//# sourceMappingURL=index.cjs.map